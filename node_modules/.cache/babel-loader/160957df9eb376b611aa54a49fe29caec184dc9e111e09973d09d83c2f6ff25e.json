{"ast":null,"code":"var _jsxFileName = \"/Users/yunashin/src/bar-genie/src/ts/components/helperComponents/MultiSelect.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MultiSelect = _ref => {\n  _s();\n  let {\n    buttonName,\n    onChange,\n    options,\n    selectedOptions\n  } = _ref;\n  const [showDropdown, setShowDropdown] = useState(false);\n  const toggleDropdown = () => {\n    setShowDropdown(!showDropdown);\n  };\n  const Option = useCallback(_ref2 => {\n    let {\n      option,\n      index\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => onChange(option.value),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: selectedOptions.includes(option.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), option.name]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }, [selectedOptions]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: showDropdown ? \"active\" : undefined,\n      onClick: toggleDropdown,\n      children: buttonName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), showDropdown && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: showDropdown ? \"dropdown\" : \"dropdown active\",\n        children: options.map((option, index) => {\n          return /*#__PURE__*/_jsxDEV(Option, {\n            option: option,\n            index: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n_s(MultiSelect, \"yanCjF4+RC6tm9C+AtCbfIDAwC8=\");\n_c = MultiSelect;\nexport default MultiSelect;\nvar _c;\n$RefreshReg$(_c, \"MultiSelect\");","map":{"version":3,"names":["useCallback","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MultiSelect","_ref","_s","buttonName","onChange","options","selectedOptions","showDropdown","setShowDropdown","toggleDropdown","Option","_ref2","option","index","onClick","value","children","type","checked","includes","fileName","_jsxFileName","lineNumber","columnNumber","name","className","undefined","map","_c","$RefreshReg$"],"sources":["/Users/yunashin/src/bar-genie/src/ts/components/helperComponents/MultiSelect.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\ntype DropdownProps = {\n  buttonName: string;\n  onChange: Function;\n  options: {\n    name: string;\n    value: string;\n  }[];\n  selectedOptions: string[];\n}\n\nconst MultiSelect = ({ buttonName, onChange, options, selectedOptions }: DropdownProps) => {\n  const [showDropdown, setShowDropdown] = useState(false);\n  const toggleDropdown = () => {\n    setShowDropdown(!showDropdown);\n  };\n\n  const Option = useCallback(({ option, index }: { option: { name: string; value: string; }; index: number; }) => {\n    return (\n      <p key={index} onClick={() => onChange(option.value)}>\n        <input type=\"checkbox\" checked={selectedOptions.includes(option.value)} />\n        {option.name}\n      </p>\n    )\n  }, [selectedOptions]);\n\n  return (\n    <>\n      <button\n        className={showDropdown ? \"active\" : undefined}\n        onClick={toggleDropdown}\n      >\n        {buttonName}\n      </button>\n      {showDropdown && (\n        <>\n          <div className={showDropdown ? \"dropdown\" : \"dropdown active\"}>\n            {options.map((option, index) => {\n              return (\n                <Option option={option} index={index} />\n              )\n            })}\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default MultiSelect;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAY9C,MAAMC,WAAW,GAAGC,IAAA,IAAuE;EAAAC,EAAA;EAAA,IAAtE;IAAEC,UAAU;IAAEC,QAAQ;IAAEC,OAAO;IAAEC;EAA+B,CAAC,GAAAL,IAAA;EACpF,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMc,cAAc,GAAGA,CAAA,KAAM;IAC3BD,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,MAAMG,MAAM,GAAGhB,WAAW,CAACiB,KAAA,IAAqF;IAAA,IAApF;MAAEC,MAAM;MAAEC;IAAoE,CAAC,GAAAF,KAAA;IACzG,oBACEd,OAAA;MAAeiB,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACQ,MAAM,CAACG,KAAK,CAAE;MAAAC,QAAA,gBACnDnB,OAAA;QAAOoB,IAAI,EAAC,UAAU;QAACC,OAAO,EAAEZ,eAAe,CAACa,QAAQ,CAACP,MAAM,CAACG,KAAK;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACzEX,MAAM,CAACY,IAAI;IAAA,GAFNX,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CAAC;EAER,CAAC,EAAE,CAACjB,eAAe,CAAC,CAAC;EAErB,oBACET,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MACE4B,SAAS,EAAElB,YAAY,GAAG,QAAQ,GAAGmB,SAAU;MAC/CZ,OAAO,EAAEL,cAAe;MAAAO,QAAA,EAEvBb;IAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACRhB,YAAY,iBACXV,OAAA,CAAAE,SAAA;MAAAiB,QAAA,eACEnB,OAAA;QAAK4B,SAAS,EAAElB,YAAY,GAAG,UAAU,GAAG,iBAAkB;QAAAS,QAAA,EAC3DX,OAAO,CAACsB,GAAG,CAAC,CAACf,MAAM,EAAEC,KAAK,KAAK;UAC9B,oBACEhB,OAAA,CAACa,MAAM;YAACE,MAAM,EAAEA,MAAO;YAACC,KAAK,EAAEA;UAAM;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAE5C,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC,gBACN,CACH;EAAA,eACD,CAAC;AAEP,CAAC;AAAArB,EAAA,CApCKF,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}