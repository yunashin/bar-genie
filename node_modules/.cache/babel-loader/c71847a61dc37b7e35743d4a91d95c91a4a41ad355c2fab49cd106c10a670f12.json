{"ast":null,"code":"var _jsxFileName = \"/Users/yunashin/src/bar-genie/src/ts/components/Body.tsx\",\n  _s = $RefreshSig$();\nimport MultiSelect from \"./helperComponents/MultiSelect\";\nimport { useFindCocktailsContext } from \"../context/FindCocktailsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const {\n    selectedSpirits,\n    setSelectedSpirits\n  } = useFindCocktailsContext();\n  const onSpiritsChange = selectedSpirit => {\n    if (selectedSpirits.includes(selectedSpirit)) {\n      setSelectedSpirits(selectedSpirits.filter(spirit => spirit !== selectedSpirit));\n    } else {\n      setSelectedSpirits([...selectedSpirits, selectedSpirit]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"m-left-20\",\n        children: \"Filter by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"m-left-20\",\n        children: /*#__PURE__*/_jsxDEV(MultiSelect, {\n          buttonName: \"Spirits\",\n          onChange: onSpiritsChange,\n          options: [{\n            name: 'Gin',\n            value: 'gin'\n          }, {\n            name: 'Vodka',\n            value: 'vodka'\n          }, {\n            name: 'Rum',\n            value: 'rum'\n          }],\n          selectedOptions: selectedSpirits\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"xzx3BprJ41/NND8feB0cjwHl1us=\", false, function () {\n  return [useFindCocktailsContext];\n});\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["MultiSelect","useFindCocktailsContext","jsxDEV","_jsxDEV","Body","_s","selectedSpirits","setSelectedSpirits","onSpiritsChange","selectedSpirit","includes","filter","spirit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","buttonName","onChange","options","name","value","selectedOptions","_c","$RefreshReg$"],"sources":["/Users/yunashin/src/bar-genie/src/ts/components/Body.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport MultiSelect from \"./helperComponents/MultiSelect\";\nimport { useFindCocktailsContext } from \"../context/FindCocktailsContext\";\n\nconst Body = () => {\n  const { selectedSpirits, setSelectedSpirits } = useFindCocktailsContext();\n\n  const onSpiritsChange = (selectedSpirit: string) => {\n    if (selectedSpirits.includes(selectedSpirit)) {\n      setSelectedSpirits(selectedSpirits.filter(spirit => spirit !== selectedSpirit));\n    } else {\n      setSelectedSpirits([...selectedSpirits, selectedSpirit]);\n    }\n  };\n\n  return (\n    <div className=\"body\">\n      <div>\n        <span className=\"m-left-20\">Filter by</span>\n        <span className=\"m-left-20\">\n          <MultiSelect\n            buttonName=\"Spirits\"\n            onChange={onSpiritsChange}\n            options={\n              [{ name: 'Gin', value: 'gin' }, { name: 'Vodka', value: 'vodka' }, { name: 'Rum', value: 'rum' }]\n            }\n            selectedOptions={selectedSpirits} />\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Body;\n"],"mappings":";;AAEA,OAAOA,WAAW,MAAM,gCAAgC;AACxD,SAASC,uBAAuB,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC,eAAe;IAAEC;EAAmB,CAAC,GAAGN,uBAAuB,CAAC,CAAC;EAEzE,MAAMO,eAAe,GAAIC,cAAsB,IAAK;IAClD,IAAIH,eAAe,CAACI,QAAQ,CAACD,cAAc,CAAC,EAAE;MAC5CF,kBAAkB,CAACD,eAAe,CAACK,MAAM,CAACC,MAAM,IAAIA,MAAM,KAAKH,cAAc,CAAC,CAAC;IACjF,CAAC,MAAM;MACLF,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEG,cAAc,CAAC,CAAC;IAC1D;EACF,CAAC;EAED,oBACEN,OAAA;IAAKU,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBX,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAMU,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5Cf,OAAA;QAAMU,SAAS,EAAC,WAAW;QAAAC,QAAA,eACzBX,OAAA,CAACH,WAAW;UACVmB,UAAU,EAAC,SAAS;UACpBC,QAAQ,EAAEZ,eAAgB;UAC1Ba,OAAO,EACL,CAAC;YAAEC,IAAI,EAAE,KAAK;YAAEC,KAAK,EAAE;UAAM,CAAC,EAAE;YAAED,IAAI,EAAE,OAAO;YAAEC,KAAK,EAAE;UAAQ,CAAC,EAAE;YAAED,IAAI,EAAE,KAAK;YAAEC,KAAK,EAAE;UAAM,CAAC,CACjG;UACDC,eAAe,EAAElB;QAAgB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAb,EAAA,CA3BKD,IAAI;EAAA,QACwCH,uBAAuB;AAAA;AAAAwB,EAAA,GADnErB,IAAI;AA6BV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}