{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createContext, useContext } from \"react\";\nexport const FindCocktailsContext = /*#__PURE__*/createContext({\n  selectedSpirits: [],\n  selectedFlavors: [],\n  setSelectedSpirits: () => {},\n  setSelectedFlavors: () => []\n});\nexport const useFindCocktailsContext = () => {\n  _s();\n  return useContext(FindCocktailsContext);\n};\n_s(useFindCocktailsContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");","map":{"version":3,"names":["createContext","useContext","FindCocktailsContext","selectedSpirits","selectedFlavors","setSelectedSpirits","setSelectedFlavors","useFindCocktailsContext","_s"],"sources":["/Users/yunashin/src/bar-genie/src/ts/context/FindCocktailsContext.tsx"],"sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport interface FindCocktailsState {\n  selectedSpirits: string[];\n  selectedFlavors: string[];\n}\n\nexport interface FindCocktailsContent extends FindCocktailsState {\n  setSelectedSpirits: (spirits: string[]) => void;\n  setSelectedFlavors: (flavors: string[]) => void;\n}\n\nexport const FindCocktailsContext = createContext<FindCocktailsContent>({\n  selectedSpirits: [],\n  selectedFlavors: [],\n  setSelectedSpirits: () => { },\n  setSelectedFlavors: () => []\n});\n\nexport const useFindCocktailsContext = () => useContext(FindCocktailsContext);\n"],"mappings":";AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAYjD,OAAO,MAAMC,oBAAoB,gBAAGF,aAAa,CAAuB;EACtEG,eAAe,EAAE,EAAE;EACnBC,eAAe,EAAE,EAAE;EACnBC,kBAAkB,EAAEA,CAAA,KAAM,CAAE,CAAC;EAC7BC,kBAAkB,EAAEA,CAAA,KAAM;AAC5B,CAAC,CAAC;AAEF,OAAO,MAAMC,uBAAuB,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACC,oBAAoB,CAAC;AAAA;AAACM,EAAA,CAAjED,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}